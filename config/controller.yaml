apiVersion: v1
kind: Namespace
metadata:
  name: triton-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: triton-loadbalancer-controller
  namespace: triton-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: triton-loadbalancer-controller
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["services/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["list", "get", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triton-loadbalancer-controller
subjects:
- kind: ServiceAccount
  name: triton-loadbalancer-controller
  namespace: triton-system
roleRef:
  kind: ClusterRole
  name: triton-loadbalancer-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: triton-credentials
  namespace: triton-system
type: Opaque
stringData:
  triton-url: "https://us-east-1.api.joyent.com"  # Replace with your Triton CloudAPI endpoint
  triton-account: ""                              # Replace with your Triton account ID
  triton-key-id: ""                               # Replace with your Triton key ID (fingerprint)
  triton-key: |                                   # MUST BE PEM FORMAT: $ ssh-keygen -p -m PEM -f <id_rsa_file> to convert a file to PEM
    -----BEGIN RSA PRIVATE KEY-----
    ...
    -----END RSA PRIVATE KEY-----
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-loadbalancer-controller
  namespace: triton-system
  labels:
    app: triton-loadbalancer-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: triton-loadbalancer-controller
  template:
    metadata:
      labels:
        app: triton-loadbalancer-controller
    spec:
      serviceAccountName: triton-loadbalancer-controller
      containers:
      - name: manager
        image: triton/loadbalancer-controller:latest
        imagePullPolicy: Always
        command:
        - /manager
        args:
        - --triton-key-path=/etc/triton/key
        - --triton-key-id=$(TRITON_KEY_ID)
        - --triton-account=$(TRITON_ACCOUNT)
        - --triton-url=$(TRITON_URL)
        env:
        - name: TRITON_KEY_ID
          valueFrom:
            secretKeyRef:
              name: triton-credentials
              key: triton-key-id
        - name: TRITON_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: triton-credentials
              key: triton-account
        - name: TRITON_URL
          valueFrom:
            secretKeyRef:
              name: triton-credentials
              key: triton-url
        volumeMounts:
        - name: triton-key
          mountPath: /etc/triton
          readOnly: true
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: triton-key
        secret:
          secretName: triton-credentials
          items:
          - key: triton-key
            path: key
            mode: 0600